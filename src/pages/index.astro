---
import BaseLayout from "@layouts/BaseLayout.astro";
import Quote from "@components/Quote.astro";
import SectionLayout from "@layouts/SectionLayout.astro";
import Painting from "@components/Painting.astro";
import Timeline from "@components/Timeline.astro";
import FaqSection from "@components/FaqSection.astro";

const paintings = await Astro.glob("./paintings/*.md");
---

<BaseLayout pageTitle="Hello World!">
	<section id="hero" class="background">
		<div class="foreground-wrapper">
			<img
				class="foreground"
				width="100%"
				height="auto"
				src="/img/foreground.png"
				alt="Background consisting of random brush strokes looking like waves"
			/>
			<div class="header">
				<h1>HELLO MY NAME IS</h1>
				<div class="overlap">
					<h1>VINCENT</h1>
					<h1>VINCENT</h1>
				</div>
			</div>
			<img
				class="vincent"
				height="auto"
				src="/img/vincent.png"
				alt="Picture of me (Vincent Van Gogh) wearing a white t-shirt"
			/>
		</div>
		<div class="background">
			<img
				width="100%"
				height="auto"
				src="/img/lower-foreground.png"
				alt="Foreground of a small forest with a large tree visible on the left side of the window with some bushes at the end of the window"
			/>
		</div>
	</section>

	<Quote
		body="Greetings, kindred soul. I am Vincent van Gogh, a passionate artist whose heart beats with the rhythm of colors and the essence of nature. Allow me to share a glimpse into the depths of my artistic journey and the world that dances within my brushstrokes."
	/>

	<SectionLayout id="work" title="My Work" background="/img/doodles-1.png">
		{
			paintings.map((painting) => {
				return (
					<Painting
						cardLayout={painting.frontmatter.cardLayout}
						title={painting.frontmatter.title}
						description={painting.frontmatter.description}
						date={painting.frontmatter.date}
						painting={painting.frontmatter.painting}
						paintingAlt={painting.frontmatter.paintingAlt}
					/>
				);
			})
		}
	</SectionLayout>

	<Quote
		body="Instead of giving way to despair, I took the way of active melancholy as long as I had strength for activity, or in other words, I preferred the melancholy that hopes and aspires and searches to the one that despairs, mournful and stagnant."
	/>

	<SectionLayout id="story" title="My Story" background="/img/doodles-2.png">
		<Timeline />
	</SectionLayout>

	<img
		style="position: relative; z-index: 3;"
		src="/img/torn-green.png"
		alt=""
	/>

	<FaqSection />
</BaseLayout>

<script>
	const image: HTMLElement | null = document.querySelector(".background");
	image &&
		(image.onload = function () {
			console.log("Background image loaded!");
		});
</script>

<style lang="scss">
	@use "@styles/variables.scss" as media;

	.background {
		background-image: url("/img/background.jpg");
		background-size: fill;
		background-repeat: repeat;
		background-position: center center;
		animation: fadeIn 1s ease 1 forwards;
		& img {
			opacity: 0;
			animation: slideUp 1.5s ease 1 forwards;
			animation-delay: var(--load-delay);
		}
	}
	.foreground-wrapper {
		transition: all 0.5s ease;
		position: relative;
		height: 94vh;
		@media only screen and (min-width: media.$media-phone) {
			height: 98vh;
		}
		display: flex;
		justify-content: center;
		align-items: self-end;
	}

	.foreground {
		opacity: 0;
		animation: slideUp 3s ease 1 forwards;
		animation-delay: var(--load-delay);
		position: absolute;
		z-index: 2;
	}

	.vincent {
		opacity: 0;
		width: 70ch;
		z-index: 1;
	}
	.header {
		& :first-child {
			opacity: 0;
			animation: slideDownFaded 0.5s ease-out 1 forwards;
			animation-delay: var(--load-delay);
		}
		height: 100vh;
		position: absolute;
		display: flex;
		flex-direction: column;
		justify-content: flex-start;
		top: clamp(10rem, 15vh, 15rem);
		.overlap {
			h1 {
				opacity: 0;
				animation: slideDownFaded 0.5s ease-out 1 forwards;
				animation-delay: 1.2s;
				color: var(--color-accent);
				font-size: clamp(5rem, 21vw, 21rem);
				position: absolute;
			}
			:last-child {
				opacity: 0;
				color: transparent;
				text-stroke: clamp(0.2rem, 0.2vw, 0.5rem) var(--color-accent);
				-webkit-text-stroke: clamp(0.2rem, 0.2vw, 0.5rem) var(--color-accent);
				z-index: 100;
			}
		}
	}

	@-webkit-keyframes slideUp {
		from {
			opacity: 0;
			transform: translateY(20rem);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	@-webkit-keyframes slideDownFaded {
		from {
			opacity: 0;
			transform: translateY(-3rem);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	@-webkit-keyframes fadeIn {
		from {
			opacity: 0;
		}
		to {
			opacity: 1;
		}
	}
</style>
