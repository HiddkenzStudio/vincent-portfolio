---
const { question, answer } = Astro.props;
---

<div class="faqCard">
	<div class="question">
		<h3>{question}</h3>
		<div class="plus-icon"></div>
	</div>
	<p class="answer">{answer}</p>
</div>

<style lang="scss">
	@use "@styles/variables.scss" as media;

	.faqCard {
		transition: all 0.75s ease;
		padding: var(--narrow-inline);
		border: var(--border-width) solid var(--color-faded);
		& .question {
			z-index: 100;
			display: flex;
			flex-direction: column-reverse;
			justify-content: flex-start;
			align-items: self-start;
			@media only screen and (min-width: media.$media-phone) {
				flex-direction: row;
				justify-content: space-between;
				align-items: center;
			}
		}
	}

	h3 {
		font-family: var(--font-title);
	}

	.answer {
		z-index: -1;
		opacity: 0;
		pointer-events: none;
		max-height: 0;
		transition: all 0.35s ease;
		@media only screen and (min-width: media.$media-phone) {
			transition: all 0.75s ease;
		}
	}

	.expanded {
		border-color: var(--color-dominant);
		& .answer {
			padding-top: 2rem;
			opacity: 1;
			pointer-events: initial;
			max-height: 200px;
			transition: all 0.35s ease;
			@media only screen and (min-width: media.$media-phone) {
				transition: all 0.75s ease;
			}
		}
	}

	.faqCard:hover {
		border-color: var(--color-dominant);
	}

	.plus-icon {
		position: relative;
		width: clamp(1rem, 3vw, 2rem);
		height: clamp(1rem, 3vw, 2rem);
		margin-bottom: 1rem;
		@media only screen and (min-width: media.$media-phone) {
			margin-bottom: 0;
		}

		&:before,
		&:after {
			transition: all 0.75s ease;
			content: "";
			position: absolute;
			background-color: var(--color-dominant);
		}

		/* Vertical line */
		&:before {
			top: 0;
			left: 50%;
			width: clamp(0.5px, 2vw, 3px);
			height: 100%;
			margin-left: -2px;
		}

		/* horizontal line */
		&:after {
			top: 50%;
			left: 0;
			width: 100%;
			height: clamp(0.5px, 2vw, 3px);
			margin-top: -2px;
		}
	}

	.plus-expanded {
		&:before,
		&:after {
			background-color: var(--color-accent);
		}
		&:before {
			transform: rotate(90deg);
		}
		&:after {
			transform: rotate(180deg);
		}
	}
</style>
