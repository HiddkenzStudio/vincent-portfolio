---
const covers: Record<string, string>[] = await Astro.glob(
	"../../public/img/timeline/*.jpg"
);
---

<section>
	<div class="selector">
		{
			covers.map((cover, i: number) => {
				return <button style={`background-image: url(${cover.default});`} />;
			})
		}
		<div class="line"></div>
	</div>
	<div class="information">
		<p>My Name is Vincent</p>
	</div>
</section>

<script>
	const buttons = document.querySelectorAll("button");
	const information: Element | null = document.querySelector(".information p");

	buttons.forEach((button: HTMLButtonElement, i: number) => {
		button.addEventListener("click", () => {
			buttons.forEach((other) => other.classList.remove("selected"));
			button.classList.add("selected");

			console.log(i);
			information && (information.textContent = "Hello");
		});
	});
</script>

<style lang="scss">
	@use "@styles/variables" as media;

	section {
		display: grid;
		grid-template-columns: 20% auto;
		.selector {
			.line {
				border-right: 0.1rem solid white;
				height: inherit;
				position: absolute;
			}
			width: 100%;
			height: 50vh;
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: space-between;
		}

		button {
			z-index: 1;
			width: 2rem;
			height: 2rem;
			border-radius: 50%;
			border: none;
			background: url("") no-repeat center center / cover;
			animation: scaleDownMobile 1s ease 1 forwards;
			@media only screen and (min-width: media.$media-phone) {
				animation-name: scaleDownDesktop;
			}
			animation-fill-mode: forwards;
		}
		.selected {
			animation: scaleUpMobile 1s ease 1 forwards;
			@media only screen and (min-width: media.$media-phone) {
				animation-name: scaleUpDesktop;
			}
		}
		@media only screen and (min-width: media.$media-phone) {
			grid-template-columns: auto;
			grid-auto-rows: auto auto;
			.selector {
				.line {
					border-bottom: 0.1rem solid white;
					height: max-content;
					width: 100%;
				}
				height: 20vh;
				flex-direction: row;
				justify-content: space-evenly;
			}
		}
	}

	@-webkit-keyframes scaleUpDesktop {
		from {
			transform: scale(1);
		}
		to {
			transform: scale(5);
		}
	}

	@-webkit-keyframes scaleDownDesktop {
		from {
			transform: scale(5);
		}
		to {
			transform: scale(1);
		}
	}

	@-webkit-keyframes scaleUpMobile {
		from {
			transform: scale(1);
		}
		to {
			transform: scale(2);
		}
	}

	@-webkit-keyframes scaleDownMobile {
		from {
			transform: scale(2);
		}
		to {
			transform: scale(1);
		}
	}
</style>
